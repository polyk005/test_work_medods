openapi: 3.0.0
info:
  title: Authentication Service API
  version: 1.0.0
  description: API for user authentication and token management

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /auth/sign-up:
    post:
      tags:
        - auth
      summary: Generate token pair for user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInput'
      responses:
        '200':
          description: Token pair generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh token pair
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshInput'
      responses:
        '200':
          description: Token pair refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized (invalid or expired token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - auth
      summary: Logout user (invalidate tokens)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized (invalid or expired token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/guid:
    get:
      tags:
        - api
      summary: Get current user GUID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: GUID retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    example: "550e8400-e29b-41d4-a716-446655440000"
        '401':
          description: Unauthorized (invalid or expired token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AuthInput:
      type: object
      required:
        - guid
      properties:
        guid:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
          description: User GUID

    RefreshInput:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
          example: "base64encodedtoken"
          description: Refresh token

    TokenPair:
      type: object
      properties:
        access_token:
          type: string
          example: "jwt.token.here"
          description: JWT access token
        refresh_token:
          type: string
          example: "base64encodedtoken"
          description: Refresh token

    StatusResponse:
      type: object
      properties:
        status:
          type: string
          example: "ok"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Error description"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT